import Head from 'next/head';
import { useRouter } from 'next/router';
import React from 'react'

const FAQ = () => {
   const router = useRouter();

  return (
    <>
      <Head>
        <title>FAQ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <div className="bg0 m-t-23 p-b-140">
        <div className="container">
          <div className="flex-w flex-sb-m p-b-52">
            <div className="flex-w flex-l-m filter-tope-group m-tb-10">
              <button
                className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1"
                data-filter="*"
                onClick={() => {
                router.replace({
                  pathname: "/shop",
                });
              }}>
                All Products
              </button>

              <button
                className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5"
                data-filter=".women"
                onClick={() => {
                    router.push({
                      pathname: "/shop",
                      query: {
                        ...router.query,
                        gender: "women",
                      },
                    });
                  }}
              >
                Women
              </button>

              <button className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" data-filter=".men"
              onClick={() => {
                    router.push({
                      pathname: "/shop",
                      query: {
                        ...router.query,
                        gender: "man",
                      },
                    });
                  }}>
                Men
              </button>

              <button 
                className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" 
                data-filter=".bag" 
                onClick={() => {
                    router.push({
                      pathname: "/shop",
                      query: {
                        ...router.query,
                        query: "Belt"
                      }
                    });
                  }} >
                Belt
              </button>

              <button
                className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5"
                data-filter=".shoes"
                onClick={() => {
                    router.push({
                      pathname: "/shop",
                      query: {
                        ...router.query,
                        query: "converse"
                      }
                    });
                  }} >
                Shoes
              </button>

              <button
                className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5"
                data-filter=".watches"
                onClick={() => {
                    router.push({
                      pathname: "/shop",
                      query: {
                        ...router.query,
                        query: "watch"
                      }
                    });
                  }} >
                Watches
              </button>
            </div>

            <div className="flex-w flex-c-m m-tb-10">
              <div className="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search show-search">
                <i className="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
                Search
              </div>
            </div> */}

            {/* search */}
            {/* <div className="panel-search w-full p-t-10 p-b-15">
              <div className="bor8 dis-flex p-l-15">
                <button className="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
                  <i className="zmdi zmdi-search"></i>
                </button>

                <input

                    className="mtext-107 cl2 size-114 plh2 p-r-15"

                    type="search"

                    name="search-product"

                    placeholder="Search"

                    onChange={(event) => {
                    event.preventDefault();
                    router.push({
                      pathname: "/shop",
                      query: {
                        ...router.query,
                        query: event.target.value,
                        },
                    });
                  }}

                    />
              </div>
            </div>
          </div> */}

          {/* <div className="row isotope-grid">
            {searchedProductsData.length > 0 ? ( searchedProductsData.map((product) => {
              return (
                <ProductItem key={product.id} {...product} />
              ) 
             })
            ) : (
                <p>There are no results...</p>
              )
            }
          </div> */}

          {/* <div className="flex-l-m flex-w w-full p-t-10 m-lr--7">
            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7 active-pagination1">
              1
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              2
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              3
            </a>
          </div> 
        </div>
      </div>*/}
    </>
  ); 
};

export default FAQ




// export const getServerSideProps: GetServerSideProps = async ({query}) => {

//   const resProducts = await fetch("http://localhost:5001/products");
//   const productsData: ProductType[] = await resProducts.json();
  
//   let resSearchedProducts: Response;

//   if (query.gender && query.query) {
//     resSearchedProducts = await fetch(
//       `http://localhost:5001/products?gender_like=${query.gender}&q=${query.query}`
//     );
//   } else if (query.gender) {
//     resSearchedProducts = await fetch(
//       `http://localhost:5001/products?gender_like=${query.gender}`
//     );
//   } else if (query.query) {
//     resSearchedProducts = await fetch(
//       `http://localhost:5001/products?q=${query.query}`
//     );
//   }  else {
//     resSearchedProducts = await fetch("http://localhost:5001/products");
//   }

//   const searchedProductsData: ProductType[] = await resSearchedProducts.json();

//  return {
//     props: {
//       productsData,  
//       searchedProductsData,
//     },
//  };
// };