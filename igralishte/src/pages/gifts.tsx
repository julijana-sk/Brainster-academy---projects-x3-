import PageTitle from '@/components/PageTitle'
import React, { useState } from 'react'
import GiftCard from '@/components/GiftCard'
import { GiftType } from '@/types/types'
import { GetStaticProps } from 'next'
import Head from 'next/head'
import AddToShoppingCard from '@/components/AddToShoppingCard'

interface Props {
    gifts: GiftType[];
}

const GiftPage: React.FC<Props> = ({gifts}) => {

 const [hovered, setHovered] = useState(false);
 const [clicked, setClicked] = useState(null);

 const handleHoverClick = (id: any) => {
    setClicked(id);
 };


  return (
    <>
      <Head>
        <title>Igralishte - Gift </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <div className='my-4'>
      <PageTitle title="Gift картички за подарок"/>
      </div>
      <div className="container-fluid">
          <div className="row d-flex flex-column justify-content-center mr-auto ml-auto">
            <div className='col-11 mr-auto ml-auto p-0'>
            {gifts?.map((card, index) => {
              return (
                  <GiftCard key={index} gift={card} index={index}/>
                )
              })}
            </div>
            <div className='col-10 d-flex flex-column justify-content-center mr-auto ml-auto mb-5'>
            <p className='title mb-4'>Одбери цена на подарок картичка:</p>
            <button 
              className={`${clicked === "500" &&
              hovered
                  ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
                  : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
                
                }`}
                onMouseEnter={() => setHovered(true)}
                onMouseLeave={() => setHovered(false)} 
                  onClick={() => handleHoverClick('500')}>
                { clicked === "500" && hovered ? 'Додај во кошничка' : '500 ден.' && clicked === "500"  ? <AddToShoppingCard /> : "500"}
            </button>
            <button 
                className={`${ clicked === "1000" &&
                hovered
                    ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
                    : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
                  
                  }`}
                  onMouseEnter={() => setHovered(true)}
                  onMouseLeave={() => setHovered(false)}
                  onClick={() => handleHoverClick('1000')}>
                  { clicked === "1000" && hovered ? 'Додај во кошничка' : '1000 ден.' && clicked === "1000" ? <AddToShoppingCard /> : "1000"}
            </button>
            <button 
              className={`${clicked === "2000" &&
              hovered
                  ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
                  : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
                
                }`}
                onMouseEnter={() => setHovered(true)}
                onMouseLeave={() => setHovered(false)}
                onClick={() => handleHoverClick('2000')} >
                { clicked === "2000" && hovered ? 'Додај во кошничка' : '2000 ден.'  && clicked === "2000" ? <AddToShoppingCard /> : "2000"}
            </button>
            <button 
              className={`${clicked === "2500" &&
              hovered
                  ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
                  : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
                
                }`}
                onMouseEnter={() => setHovered(true)}
                onMouseLeave={() => setHovered(false)}
                onClick={() => handleHoverClick('2500')} >
                { clicked === "2500" && hovered ? 'Додај во кошничка' : '2500 ден.'  && clicked === "2500" ? <AddToShoppingCard /> : "2500" }
            </button>
            <button 
                className={`${ clicked === "4000" &&
                hovered
                    ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
                    : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
                  
                  }`}
                  onClick={() => handleHoverClick('4000')}
                  onMouseEnter={() => setHovered(true)}
                  onMouseLeave={() => setHovered(false)} >
                  { clicked === "4000" && hovered ? 'Додај во кошничка' : '4000 ден.'  && clicked === "4000" ? <AddToShoppingCard /> : "4000"}
            </button>
            </div>
        </div>
      </div>
    </>
  )
}

export default GiftPage;


export const getStaticProps: GetStaticProps = async () => {

  const res = await fetch("http://localhost:5001/gifts");
  const gifts: GiftType[] = await res.json();

 return {
    props: {
      gifts,
    },
 };
};


// import { useState } from 'react';
// import { useRouter } from 'next/router';
// import { useForm } from 'react-hook-form';
// import AddToShoppingCard from '@components/icons/AddToShoppingCard';

// interface GiftType {
//  id: string;
//  title: string;
//  price: number;
//  duration: number;
// }

// const GiftPage = ({ gifts }: { gifts: GiftType[] }) => {
//  const [hovered, setHovered] = useState(false);
//  const [clicked, setClicked] = useState('');
//  const [shoppingCart, setShoppingCart] = useState<string[]>([]);

//  const { register, handleSubmit } = useForm();
//  const router = useRouter();

//  const onSubmit = (data: any) => {
//     console.log(data);
//     router.push('/confirm');
//  };

//  const handleHoverClick = (id: string) => {
//     setClicked(id);
//  };

//  const handleAddToShoppingCard = (id: string) => {
//     if (shoppingCart.includes(id)) {
//       setShoppingCart(shoppingCart.filter((item) => item !== id));
//     } else {
//       setShoppingCart([...shoppingCart, id]);
//     }
//  };

//  return (
//     <>
//       <div className="container">
//         <div className="row">
//           <div className="col-12">
//             <h2 className="text-center">Внесите ја својата количина и време за подношење</h2>
//           </div>
//         </div>
//         <div className="row">
//           <div className="col-12">
//             <form onSubmit={handleSubmit(onSubmit)}>
//               <div className="form-group">
//                 <label htmlFor="amount">Количина:</label>
//                 <input
//                  type="number"
//                  className="form-control"
//                  id="amount"
//                  name="amount"
//                  placeholder="Внесете количина"
//                  ref={register({ required: true })}
//                 />
//               </div>
//               <div className="form-group">
//                 <label htmlFor="duration">Вreme:</label>
//                 <select
//                  className="form-control"
//                  id="duration"
//                  name="duration"
//                  ref={register({ required: true })}
//                 >
//                  <option value="2500">2500 ден.</option>
//                  <option value="4000">4000 ден.</option>
//                 </select>
//               </div>
//               <div className="form-group">
//                 <label htmlFor="message">Порака:</label>
//                 <textarea
//                  className="form-control"
//                  id="message"
//                  name="message"
//                  rows={3}
//                  ref={register({ required: true })}
//                 ></textarea>
//               </div>
//               <div className="form-group">
//                 <label htmlFor="duration">Одабери гиiftingCard:</label>
//                 <div className="row">
//                  {gifts.map((gift) => (
//                     <div className="col-12 col-md-6 col-lg-4">
//                       <div className="giftCard">
//                         <div className="giftCard-image">
//                           <img src={gift.title} alt={gift.title} />
//                         </div>
//                         <div className="giftCard-info">
//                           <h4>{gift.title}</h4>
//                           <p>Price: {gift.price} ден.</p>
//                           <button
//                             className={`${
//                               clicked === gift.id && hovered
//                                 ? 'giftBtnHover PrimaryBtn giftBtn-text mb-4 p-0'
//                                 : 'PrimaryBtn giftBtn-text giftBtn mb-4 p-0'
//                             }`}
//                             onClick={() => handleHoverClick(gift.id)}
//                             onMouseEnter={() => setHovered(true)}
//                             onMouseLeave={() => setHovered(false)}
//                           >
//                             {clicked === gift.id ? 'Selected' : 'Select'}
//                           </button>
//                         </div>
//                       </div>
//                     </div>
//                   ))}
//                 </div>
//               </div>
//               <div className="form-group">
//                 <button type="submit" className="PrimaryBtn">
//                  Continue to Checkout
//                 </button>
//               </div>
//             </form>
//           </div>
//         </div>
//       </div>
//     </>
//  );
// };

// export default GiftPage;