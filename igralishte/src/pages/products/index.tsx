import React, { useState } from 'react'
import Head from 'next/head';
import { GetServerSideProps, NextPage } from 'next';
import ProductItem from '@/components/ProductItem';
import { AccessoriesType, DataType, VintageClothesType } from '@/types/types';
import { useRouter } from 'next/router';
import ProductList from '@/components/ProductList';


interface Props {
  products: DataType["products"];
  vintageClothes: VintageClothesType;
  accessories: AccessoriesType;
}

const ProductPage: NextPage<Props> = ({ products, vintageClothes, accessories }) => {
    
    
    const router = useRouter();
    const [page, setPage] = useState(1);
//     const totalPages = Math.ceil(products.vintageClothes.length / 10);
//     const [itemProducts, setItemProducts] = useState(products.slice(0, 10));
//     const [currentIndex, setCurrentIndex] = useState(0);
//     const [activePage, setActivePage] = useState(1);


//     const handlePrevClick = () => {
//         setPage(page - 1);
//         setActivePage(page - 1);
//         if (currentIndex > 0) {
//         setCurrentIndex(currentIndex - 10);
//         setItemProducts(allproducts.slice(currentIndex - 10, currentIndex));
//         }
//   };

//     const handleNextClick = () => {
//         setPage(page + 1);
//         setActivePage(page + 1);
//         if (currentIndex + 10 < allproducts.length) {
//         setCurrentIndex(currentIndex + 10);
//         setItemProducts(allproducts.slice(currentIndex + 10, currentIndex + 20));
//         }
//   };


  return (
    < >

      <Head>
        <title>Igralishte - Product</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='col-12'>
        {/* navbar nad produktite  */}
            <div className="flex-w flex-sb-m p-b-52">
                {/* search */}
                {/* <div className="panel-search w-full p-t-10 p-b-15">
                <div className="bor8 dis-flex p-l-15">
                    <button className="">
                    <i className="zmdi zmdi-search"></i>
                    </button>

                    <input

                        className="mtext-107 cl2 size-114 plh2 p-r-15"

                        type="search"

                        name="search-product"

                        placeholder="Search"

                        onChange={(event) => {
                        event.preventDefault();
                        router.push({
                        pathname: "/products",
                        query: {
                            ...router.query,
                            query: event.target.value,
                            },
                        });
                    }}

                        />
                </div>
                </div> */}
                {/* filtri selekt kopcinja */}
                <div className="flex-w flex-l-m filter-tope-group m-tb-10">
                <button
                    className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1"
                    data-filter="*"
                    onClick={() => {
                    router.replace({
                    pathname: "/products",
                    });
                }}>
                    All Products
                </button>

                <button
                    className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5"
                    data-filter=".women"
                    onClick={() => {
                        router.push({
                        pathname: "/products",
                        query: {
                            ...router.query,
                            gender: "women",
                        },
                        });
                    }}
                >
                    Women
                </button>

                <button className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" data-filter=".men"
                onClick={() => {
                        router.push({
                        pathname: "/products",
                        query: {
                            ...router.query,
                            gender: "man",
                        },
                        });
                    }}>
                    Men
                </button>

                <button 
                    className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" 
                    data-filter=".bag" 
                    onClick={() => {
                        router.push({
                        pathname: "/products",
                        query: {
                            ...router.query,
                            query: "Belt"
                        }
                        });
                    }} >
                    Belt
                </button>

                <button
                    className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5"
                    data-filter=".shoes"
                    onClick={() => {
                        router.push({
                        pathname: "/products",
                        query: {
                            ...router.query,
                            query: "converse"
                        }
                        });
                    }} >
                    Shoes
                </button>

                <button
                    className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5"
                    data-filter=".watches"
                    onClick={() => {
                        router.push({
                        pathname: "/products",
                        query: {
                            ...router.query,
                            query: "watch"
                        }
                        });
                    }} >
                    Watches
                </button>
                </div>

            </div>
        {/* search END */}
        </div>
        <div className="container my-5">
          <div  className="row flex-row flex-wrap">
            <div className="container">
              <div  className="row flex-row">
                <div className="col-12 flex-row flex-wrap justify-content-around">
                    {products.vintageClothes.tops?.map((product) => {
                        return (
                        <ProductItem key={product.id} {...product}/>
                        )
                    })
                    }
                    {products.accessories.purses?.map((product) => {
                        return (
                        <ProductItem key={product.id} {...product}/>
                        )
                    })
                    }

                {/* // OPTION 1 */}              
                {/* {products.vintageClothes.forEach((product) => {
                        return (
                            <>
                            <ProductList products={product.top} />
                            <ProductList products={product.pants} />
                            <ProductList products={product.bottomsShorts} />
                            <ProductList products={product.dresses} />
                            <ProductList products={product.coatsAndJackets} />
                            <ProductList products={product.underwear} />
                            </>
                        )
                    })
                } */}


                {/* // OPTION 2  */}
               {/* {products.vintageClothes.forEach((vintageClothes: VintageClothesType) => {
                Object.values(vintageClothes).forEach((products: ProductType[]) => {
                    products.forEach((product: ProductType) => {
                        return (
                            <ProductItem {...product}/>
                        )
                    })
                })
            })} */}
                    

                  {/* // OPTION 3    */}
                  {/* {allproducts.length > 0 ? (
                    allproducts.map((product, productIndex) => {
                    let columnSize = "col-5 product-img-small";
                    let columnText = "product-text-a"
                    if ((productIndex + 1) % 3 === 0) {columnSize = "col-11"; columnText = "product-text"}
                        return (
                            <div key={productIndex} className={`${columnSize} ${columnText} p-0 mb-2`}>
                            <ProductItem   id={product.id} title={product.title} img={product.img} price={product.price}/>
                            </div>
                        );
                    })
                    ) : (
                        <div>No products found.</div>
                    )} */}

                </div>
              </div>
            </div>
          </div>
        </div>
        {/* <div className="flex-row">
            <div className="col-12 text-center mb-5" style={{letterSpacing: "3px"}}>
                {allproducts.length > 10 && (
                    <>
                    <button className="bg-transparent border-0 mr-3" onClick={handlePrevClick} disabled={page === 1}>
                        {'<'}
                    </button>
                    <span>{page} • {page + 1} • {page + 2} • {page + 3} • {page + 4} ... {totalPages}</span>
                    <button className="bg-transparent border-0 ml-3" onClick={handleNextClick} disabled={page === totalPages}>
                        {'>'}
                    </button>
                    </>
                )}
            </div>
        </div> */}
    </>
  ); 
};

export default ProductPage;



 export const getServerSideProps: GetServerSideProps = async ({query}) => { 
    
const page = parseInt(query.page as string, 10) || 1;


const resBoxItems = await fetch('http://localhost:5001/boxComponents'); 
const boxItemsData = await resBoxItems.json();

const response = await fetch(`http://localhost:5001/products?limit=10&page=${page}`); 
const products: DataType["products"] = await response.json();


const resVintageClothes = await fetch(`http://localhost:5001/products?vintageClothes?limit=10&page=${page}`); 
const vintageClothes: VintageClothesType  = await resVintageClothes.json();
const resAccessories = await fetch(`http://localhost:5001/products?accessories?limit=10&page=${page}`); 
const accessories: AccessoriesType = await resAccessories.json();

// const resVintageClothes = await fetch(`http://localhost:5001/products?vintageClothes?limit=10&page=${page}`); 
// const  {tops, pants, bottomsShorts, dresses, coatsAndJackets, underwear }  = await resVintageClothes.json();
// const resAccessories = await fetch(`http://localhost:5001/products?accessories?limit=10&page=${page}`); 
// const {purses, jewelry}  = await resAccessories.json();

return { 
    props: { 
        products, 
        vintageClothes,
        accessories,
        page, 
        boxItemsData 
        // vintageClothes: [{tops, pants, bottomsShorts, dresses, coatsAndJackets, underwear }] ,
        // accessories: [{purses, jewelry} ],
    },
    }
 }