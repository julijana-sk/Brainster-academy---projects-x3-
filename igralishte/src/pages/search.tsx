import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import PageTitle from "../components/PageTitle";
import { ProductType } from "../types/types";

interface Props {
  searchedProductsItemsData: ProductType[];
}
const SearchPage: NextPage<Props> = ({searchedProductsItemsData}) => {
  return (
    <>
      <Head>
        <title>Igralishte - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <PageTitle title={"Search"}/> */}

      {/* <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container"> */}
          {/* products */}
          {/* <>
            <h2 className="mb-5">Products</h2>
            <div className="row isotope-grid">
              {searchedProductsItemsData.length > 0 ? ( searchedProductsItemsData.map((searchedProduct) => {
              return (
                <div className="col-4">
                <ProductItem key={searchedProduct.id} {...searchedProduct}/>
                  </div>
                  ) 
                })
                ) : (
                  <p className="ml-3 mb-4">There are no results with your search.</p>
                  )
                }
            </div>
          </>
        </div>
      </div> */}
    </>
  );
};

export default SearchPage;

// export const getServerSideProps: GetServerSideProps = async ({query}) => {

//  let resSearchedBlogsItems: Response;
//  let resSearchedProductsItems: Response;
//  let searchQuery = query.query || "";

//  if (searchQuery) {
//     [resSearchedBlogsItems, resSearchedProductsItems] = await Promise.all([
//       fetch(`http://localhost:5001/blogs?q=${query.query}`),
//       fetch(`http://localhost:5001/products?q=${query.query}`),
//     ]);
//  } else {
//     [resSearchedBlogsItems, resSearchedProductsItems] = await Promise.all([
//       fetch("http://localhost:5001/blogs"),
//       fetch("http://localhost:5001/products"),
//     ]);
//  }

//  const [searchedBlogsItemsData, searchedProductsItemsData ] = await Promise.all([
//     resSearchedBlogsItems.json(),
//     resSearchedProductsItems.json(),
//   ]);
   

//  return {
//   props: {
//     searchedBlogsItemsData,
//     searchedProductsItemsData,
//     },
//   };

// };